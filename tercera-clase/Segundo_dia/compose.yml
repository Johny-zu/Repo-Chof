services:
  vote:
    build:
      context: ./vote
      dockerfile: Dockerfile
      target: dev
    image: ajgh/vote-app:vote
    volumes:
      - ./vote:/usr/local/app
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      redis:
        condition: service_healthy
    networks: 
      - back-tier
      - front-tier

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - back-tier

  redis:
    image: redis:alpine
    networks:
      - back-tier
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  result:
    build:
      context: ./result
      dockerfile: Dockerfile
    image: ajgh/vote-app:result
    volumes:
      - ./result:/usr/local/app
    ports:
      - "8081:80"
    networks:
      - front-tier
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - back-tier

volumes:
  db-data:

networks:
  front-tier: 
  back-tier: